\BOOKMARK [0][-]{chapter.1}{Introduction}{}% 1
\BOOKMARK [1][-]{section.1.1}{Model-based Testing}{chapter.1}% 2
\BOOKMARK [1][-]{section.1.2}{Graph Transformation}{chapter.1}% 3
\BOOKMARK [1][-]{section.1.3}{Research goals}{chapter.1}% 4
\BOOKMARK [1][-]{section.1.4}{Roadmap}{chapter.1}% 5
\BOOKMARK [0][-]{chapter.2}{Background}{}% 6
\BOOKMARK [1][-]{section.2.1}{Model-based Testing}{chapter.2}% 7
\BOOKMARK [2][-]{subsection.2.1.1}{Previous work}{section.2.1}% 8
\BOOKMARK [2][-]{subsection.2.1.2}{Labelled Transition Systems}{section.2.1}% 9
\BOOKMARK [2][-]{subsection.2.1.3}{Input-Output Transition Systems}{section.2.1}% 10
\BOOKMARK [2][-]{subsection.2.1.4}{Coverage}{section.2.1}% 11
\BOOKMARK [1][-]{section.2.2}{Algebra}{chapter.2}% 12
\BOOKMARK [1][-]{section.2.3}{Symbolic Transition Systems}{chapter.2}% 13
\BOOKMARK [2][-]{subsection.2.3.1}{Previous work}{section.2.3}% 14
\BOOKMARK [2][-]{subsection.2.3.2}{Definition}{section.2.3}% 15
\BOOKMARK [2][-]{subsection.2.3.3}{Input-Output Symbolic Transition Systems}{section.2.3}% 16
\BOOKMARK [2][-]{subsection.2.3.4}{Example}{section.2.3}% 17
\BOOKMARK [2][-]{subsection.2.3.5}{STS to LTS mapping}{section.2.3}% 18
\BOOKMARK [2][-]{subsection.2.3.6}{Coverage}{section.2.3}% 19
\BOOKMARK [1][-]{section.2.4}{Graph Grammars}{chapter.2}% 20
\BOOKMARK [1][-]{section.2.5}{Tooling}{chapter.2}% 21
\BOOKMARK [2][-]{subsection.2.5.1}{ATM}{section.2.5}% 22
\BOOKMARK [2][-]{subsection.2.5.2}{GROOVE}{section.2.5}% 23
\BOOKMARK [2][-]{subsection.2.5.3}{Graph grammars in GROOVE}{section.2.5}% 24
\BOOKMARK [0][-]{chapter.3}{From Graph Grammar to STS}{}% 25
\BOOKMARK [1][-]{section.3.1}{Requirements considerations}{chapter.3}% 26
\BOOKMARK [1][-]{section.3.2}{Point algebra}{chapter.3}% 27
\BOOKMARK [1][-]{section.3.3}{Variables}{chapter.3}% 28
\BOOKMARK [1][-]{section.3.4}{The algorithm}{chapter.3}% 29
\BOOKMARK [2][-]{subsection.3.4.1}{Locations}{section.3.4}% 30
\BOOKMARK [2][-]{subsection.3.4.2}{Location variables}{section.3.4}% 31
\BOOKMARK [2][-]{subsection.3.4.3}{Gates}{section.3.4}% 32
\BOOKMARK [2][-]{subsection.3.4.4}{Interaction variables}{section.3.4}% 33
\BOOKMARK [2][-]{subsection.3.4.5}{Guards}{section.3.4}% 34
\BOOKMARK [2][-]{subsection.3.4.6}{Update mappings}{section.3.4}% 35
\BOOKMARK [2][-]{subsection.3.4.7}{Switch relations}{section.3.4}% 36
\BOOKMARK [1][-]{section.3.5}{Constraints}{chapter.3}% 37
\BOOKMARK [2][-]{subsection.3.5.1}{Constraint 1: unique variables}{section.3.5}% 38
\BOOKMARK [2][-]{subsection.3.5.2}{Constraint 2: no variables in NACs}{section.3.5}% 39
\BOOKMARK [2][-]{subsection.3.5.3}{Constraint 3: structural constraints on node creating rules}{section.3.5}% 40
\BOOKMARK [0][-]{chapter.4}{Implementation}{}% 41
\BOOKMARK [1][-]{section.4.1}{General setup}{chapter.4}% 42
\BOOKMARK [1][-]{section.4.2}{Description of added functionality}{chapter.4}% 43
\BOOKMARK [2][-]{subsection.4.2.1}{GROOVE Interface}{section.4.2}% 44
\BOOKMARK [2][-]{subsection.4.2.2}{STS}{section.4.2}% 45
\BOOKMARK [2][-]{subsection.4.2.3}{ATM Interface}{section.4.2}% 46
\BOOKMARK [1][-]{section.4.3}{Rule priority}{chapter.4}% 47
\BOOKMARK [0][-]{chapter.5}{Validation}{}% 48
\BOOKMARK [1][-]{section.5.1}{Validation models}{chapter.5}% 49
\BOOKMARK [1][-]{section.5.2}{Measurements}{chapter.5}% 50
\BOOKMARK [2][-]{subsection.5.2.1}{Simulation}{section.5.2}% 51
\BOOKMARK [2][-]{subsection.5.2.2}{Performance}{section.5.2}% 52
\BOOKMARK [2][-]{subsection.5.2.3}{Model redundancy}{section.5.2}% 53
\BOOKMARK [2][-]{subsection.5.2.4}{Model complexity}{section.5.2}% 54
\BOOKMARK [2][-]{subsection.5.2.5}{Extendability}{section.5.2}% 55
\BOOKMARK [0][-]{chapter.6}{Model Examples}{}% 56
\BOOKMARK [1][-]{section.6.1}{Example 1: boardgame}{chapter.6}% 57
\BOOKMARK [2][-]{subsection.6.1.1}{Simulation}{section.6.1}% 58
\BOOKMARK [2][-]{subsection.6.1.2}{Performance}{section.6.1}% 59
\BOOKMARK [2][-]{subsection.6.1.3}{Model redundancy}{section.6.1}% 60
\BOOKMARK [2][-]{subsection.6.1.4}{Model complexity}{section.6.1}% 61
\BOOKMARK [2][-]{subsection.6.1.5}{Extendability}{section.6.1}% 62
\BOOKMARK [1][-]{section.6.2}{Example 2: farmer-wolf-goat-cabbage}{chapter.6}% 63
\BOOKMARK [2][-]{subsection.6.2.1}{Simulation}{section.6.2}% 64
\BOOKMARK [2][-]{subsection.6.2.2}{Performance}{section.6.2}% 65
\BOOKMARK [2][-]{subsection.6.2.3}{Model redundancy}{section.6.2}% 66
\BOOKMARK [2][-]{subsection.6.2.4}{Model complexity}{section.6.2}% 67
\BOOKMARK [2][-]{subsection.6.2.5}{Extendability}{section.6.2}% 68
\BOOKMARK [1][-]{section.6.3}{Example 3: customer reservations}{chapter.6}% 69
\BOOKMARK [1][-]{section.6.4}{Example 4: bar tab system}{chapter.6}% 70
\BOOKMARK [1][-]{section.6.5}{Example 5: communication protocol}{chapter.6}% 71
\BOOKMARK [0][-]{chapter.7}{Case Study}{}% 72
\BOOKMARK [1][-]{section.7.1}{Scanflow Cash Register Protocol}{chapter.7}% 73
\BOOKMARK [1][-]{section.7.2}{Measurements}{chapter.7}% 74
\BOOKMARK [0][-]{chapter.8}{Conclusion}{}% 75
\BOOKMARK [1][-]{section.8.1}{Summary}{chapter.8}% 76
\BOOKMARK [1][-]{section.8.2}{Conclusion}{chapter.8}% 77
\BOOKMARK [1][-]{section.8.3}{Future work}{chapter.8}% 78
\BOOKMARK [0][-]{chapter*.28}{List of Symbols}{}% 79
