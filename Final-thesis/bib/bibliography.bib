@book{Laird:SoftwareMeasurement,
  author = "Laird, L. \& Brennan, C.",
  title = "Software measurement and estimation: A practical approach.",
  publisher = "IEEE Computer Society/Wiley",
  year = 2006
}

ï»¿@article {Utting:MBTTaxonomy,
author = {Utting, Mark and Pretschner, Alexander and Legeard, Bruno},
title = {A taxonomy of model-based testing approaches},
journal = {Software Testing, Verification and Reliability},
publisher = {John Wiley & Sons, Ltd.},
issn = {1099-1689},
url = {http://dx.doi.org/10.1002/stvr.456},
doi = {10.1002/stvr.456},
pages = {n/a--n/a},
keywords = {model-based testing approaches, taxonomy, survey},
year = {2011},
}

@article{denicola:testing,
title = "Testing equivalences for processes",
journal = "Theoretical Computer Science",
volume = "34",
number = "1-2",
pages = "83 - 133",
year = "1984",
note = "",
issn = "0304-3975",
doi = "10.1016/0304-3975(84)90113-0",
url = "http://www.sciencedirect.com/science/article/pii/0304397584901130",
author = "R. De Nicola and M.C.B. Hennessy"
}

@ARTICLE{Tretmans:ModelBasedTesting,
  author = {Jan Tretmans},
  title = {Model Based Testing with Labelled Transition Systems},
  journal = {Formal methods and testing: an outcome of the FORTEST network},
  year = {2008},
  publisher = {Springer-Verlag, Berlin, Heidelberg}
}

@book{Broy:ModelBasedTesting,
  author = "Manfred Broy, Bengt Jonsson, Joost-Pieter Katoen and Alexander Pretschner",
  title = "Model-Based Testing of Reactive Systems",
  publisher = "Springer-Verlag Berlin Heidelberg",
  year = 2005
}
        
@incollection {Tretmans:testgeneration,
   author = {Tretmans, Jan},
   affiliation = {University of Twente PO Box 217 NL-7500 AE Enschede},
   title = {Test generation with inputs, outputs, and quiescence},
   booktitle = {Tools and Algorithms for the Construction and Analysis of Systems},
   series = {Lecture Notes in Computer Science},
   editor = {Margaria, Tiziana and Steffen, Bernhard},
   publisher = {Springer Berlin / Heidelberg},
   isbn = {978-3-540-61042-7},
   keyword = {Computer Science},
   pages = {127-146},
   volume = {1055},
   url = {http://dx.doi.org/10.1007/3-540-61042-1\_42},
   note = {10.1007/3-540-61042-1\_42},
   year = {1996}
}

@PhdThesis{Tretmans:conformancetesting, 
   author = {Tretmans, Jan},
   institution = {University of Twente, Enschede, The Netherlands},
   title = {A Formal Approach to Conformance Testing},
   year = {1992},
   school = {University of Twente, Enschede, The Netherlands}
}

@ARTICLE{lynch:ioautomata,
  author = {N.A. Lynch and M.R. Tuttle},
  title = {An introduction to Input/Output Automata},
  journal = {CWI Quarterly},
  year = {1989},
  pages = {2(3):219-246}
}

@article{brinksma:testgeneration, 
  author = {E. Brinksma},
  title = {A theory for the derivation of tests},
  year = {1988},
  journal = {Protocol Specification, Testing, and Verification VIII}
}

@incollection {brinksma:testing,
   author = {Brinksma, Ed and Tretmans, Jan},
   affiliation = {University of Twente Faculty of Computer Science P.O. Box217 7500 AE Enschede The Netherlands},
   title = {Testing Transition Systems: An Annotated Bibliography},
   booktitle = {Modeling and Verification of Parallel Processes},
   series = {Lecture Notes in Computer Science},
   editor = {Cassez, Franck and Jard, Claude and Rozoy, Brigitte and Ryan, Mark},
   publisher = {Springer Berlin / Heidelberg},
   isbn = {978-3-540-42787-2},
   keyword = {Computer Science},
   pages = {187-195},
   volume = {2067},
   url = {http://dx.doi.org/10.1007/3-540-45510-8\_9},
   note = {10.1007/3-540-45510-8\_9},
   year = {2001}
}

@ARTICLE{Lee:testing, 
author={Lee, D. and Yannakakis, M.}, 
journal={Proceedings of the IEEE}, 
title={Principles and methods of testing finite state machines-a survey }, 
year={1996}, 
month={aug}, 
volume={84}, 
number={8}, 
pages={1090 -1123}, 
keywords={FSM testing;automata theory;communication protocols;conformance testing;finite state machines;sequential circuit testing;conformance testing;finite state machines;identification;logic testing;protocols;reviews;sequences;sequential circuits;}, 
doi={10.1109/5.533956}, 
ISSN={0018-9219},}
}

@article{Nachmanson:testing,
 author = {Nachmanson, Lev and Veanes, Margus and Schulte, Wolfram and Tillmann, Nikolai and Grieskamp, Wolfgang},
 title = {Optimal strategies for testing nondeterministic systems},
 journal = {SIGSOFT Softw. Eng. Notes},
 volume = {29},
 issue = {4},
 month = {July},
 year = {2004},
 issn = {0163-5948},
 pages = {55--64},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1013886.1007520},
 doi = {http://doi.acm.org/10.1145/1013886.1007520},
 acmid = {1007520},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {abstract state machines, optimal game strategies, probabilistic nondeterministic finite state machines},
} 

@article{Hasan:testing,
title = "Formal methods for test sequence generation",
journal = "Computer Communications",
volume = "15",
number = "5",
pages = "311 - 325",
year = "1992",
note = "",
issn = "0140-3664",
doi = "10.1016/0140-3664(92)90092-S",
url = "http://www.sciencedirect.com/science/article/pii/014036649290092S",
author = "Hasan and Ural",
keywords = "formal methods",
keywords = "test sequence generation",
keywords = "finite state machines",
keywords = "protocol testing"
}

@article{McConnell:testing,
 author = {McConnell, Steve},
 title = {Software quality at top speed},
 journal = {Softw. Dev.},
 volume = {4},
 issue = {8},
 month = {August},
 year = {1996},
 issn = {1070-8588},
 pages = {38--42},
 numpages = {5},
 url = {http://dl.acm.org/citation.cfm?id=231285.231292},
 acmid = {231292},
 publisher = {Miller Freeman, Inc.},
 address = {San Francisco, CA, USA},
} 

@book{Pol:testing,
  author = {Martin Pol},
  title = {Testen volgens Tmap (in dutch, Testing according to Tmap)},
  year = {1995},
  publisher = {Uitgeverij Tutein Nolthenius}
}

@article{Blackburn:testing,
  author = {M. Blackburn, R. Busser and A. Nauman},
  title = {Why model-based test automation is different and what you should know to get started.},
  journal = {International Conference on Practical Software Quality and Testing},
  year = {2004}
}

@ARTICLE{McCabe:testing,
author={McCabe, Thomas J.},
title={STRUCTURED TESTING: A SOFTWARE TESTING METHODOLOGY USING THE CYCLOMATIC COMPLEXITY METRIC},
journal={National Bureau of Standards, Special Publication},
year={1982},
url={http://www.scopus.com/inward/record.url?eid=2-s2.0-0020257692&partnerID=40&md5=fcfee055fd5e949cc92a563fee8167d8},
source={Scopus}
}

@article{Zhu:coverage,
 author = {Zhu, Hong and Hall, Patrick A. V. and May, John H. R.},
 title = {Software unit test coverage and adequacy},
 journal = {ACM Comput. Surv.},
 issue_date = {Dec. 1997},
 volume = {29},
 number = {4},
 month = dec,
 year = {1997},
 issn = {0360-0300},
 pages = {366--427},
 numpages = {62},
 url = {http://doi.acm.org/10.1145/267580.267590},
 doi = {10.1145/267580.267590},
 acmid = {267590},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {comparing testing effectiveness, fault detection, software unit test, test adequacy criteria, test coverage, testing methods},
} 

@book{Huth:logic,
 author = {M.R.A. Huth and M. Ryan},
 title = {Logic in computer science: modelling and reasoning about systems},
 publisher = {Cambridge University Press},
 year = {2000}
}

@book{Myers:2004,
 author = {Myers, Glenford J. and Sandler, Corey},
 title = {The Art of Software Testing},
 year = {2004},
 isbn = {0471469122},
 publisher = {John Wiley \& Sons}
}

@INPROCEEDINGS{Reid:partitioning, 
author={Reid, S.C.}, 
booktitle={Software Metrics Symposium, 1997. Proceedings., Fourth International}, 
title={An empirical analysis of equivalence partitioning, boundary value analysis and random testing}, 
year={1997}, 
month={nov}, 
volume={}, 
number={}, 
pages={64 -73}, 
keywords={Ada code;BVA;EP;absolute values;arbitrarily chosen values;boundary value analysis;empirical analysis;equivalence partitioning;experimental methodology;input values;operational avionics system;random testing;test cases;test technique;Ada;aircraft computers;military avionics;military computing;program testing;software metrics;}, 
doi={10.1109/METRIC.1997.637166}, 
ISSN={}
}

@inproceedings{Tretmans:TorX,
          eprintid = {9475},
             month = {December},
      official_url = {http://www.agedis.de/conference/},
            author = {G. J. {Tretmans} and H. {Brinksma}},
         num_pages = {13},
        pres_types = {Talk},
       ispublished = {Published},
            editor = {A. {Hartman} and K. {Dussa-Ziegler}},
              isbn = {not assigned},
      howpublished = {http://eprints.eemcs.utwente.nl/9475/},
          location = {Nuremberg, Germany},
       event_dates = {December 11-12, 2003},
        event_type = {Conference},
   research_groups = {EWI-FMT: Formal Methods and Tools},
         booktitle = {First European Conference on Model-Driven Software Engineering, Nuremberg, Germany},
          refereed = {Yes},
  research_programs = {CTIT-UBRICKS: Building Blocks for Ubiquitous Computing and Communication},
  research_projects = {C{\^o}te de Resyste: Conformance Testing for Reactive Systems},
             title = {TorX: Automated Model-Based Testing},
          abstract = {Systematic testing is very important for assessing and improving the quality of software systems. Yet, testing turns out to be expensive, laborious, time-consuming and error-prone. The Dutch research and development project C{\^o}te de Resyste worked on methods, techniques and tools for automating specification based testing using formal methods. The main achievement of the project is a test tool, baptized TorX, which integrates automatic test generation, test execution, and test analysis in an on-the-fly manner. On the one hand, TorX is based on well-defined theory, viz. the ioco-test theory, which has its roots in the theory of testing- and refusal-equivalences for transition systems. On the other hand, the applicability of TorX has been demonstrated by testing several academic and industrial case studies. This paper summarizes the main results of the project C{\^o}te de Resyste.},
     international = {Yes},
             pages = {31--43},
              year = {2003}
}

@incollection{Belinfante:JTorX,
   author = {Belinfante, Axel},
   affiliation = {University of Twente Formal Methods and Tools The Netherlands},
   title = {J{T}orX: A Tool for On-Line Model-Driven Test Derivation and Execution},
   booktitle = {Tools and Algorithms for the Construction and Analysis of Systems},
   series = {Lecture Notes in Computer Science},
   editor = {Esparza, Javier and Majumdar, Rupak},
   publisher = {Springer Berlin / Heidelberg},
   isbn = {978-3-642-12001-5},
   keyword = {Computer Science},
   pages = {266-270},
   volume = {6015},
   year = {2010}
}

@ARTICLE{Cohen:AETG, 
author={Cohen, D.M. and Dalal, S.R. and Fredman, M.L. and Patton, G.C.}, 
journal={Software Engineering, IEEE Transactions on}, 
title={The AETG system: an approach to testing based on combinatorial design}, 
year={1997}, 
month={jul}, 
volume={23}, 
number={7}, 
pages={437 -444}, 
keywords={AETG system;combinatorial design;high-level test plans;interoperability testing;n-way parameter combination;pairwise parameter combination;software testing;system configuration parameters;system test parameters;system testing;test scenarios;test set generation;triple parameter combination;unit testing;user inputs;open systems;program testing;software cost estimation;software tools;}, 
doi={10.1109/32.605761}, 
ISSN={0098-5589},}

@INPROCEEDINGS{Prowell:JUMBL, 
author={Prowell, S.J.}, 
booktitle={System Sciences, 2003. Proceedings of the 36th Annual Hawaii International Conference on}, title={{JUMBL}: a tool for model-based statistical testing}, 
year={2003}, 
month={jan.}, 
volume={}, 
number={}, 
pages={ 9 pp.}, 
keywords={ J Usage Model Builder Library; JUMBL; Java class library; command-line tools; model analysis; model construction; model-based statistical testing; software quality; system reliability; test cases generation; usage model; Java; program testing; reasoning about programs; software quality; software reliability; statistical testing;}, 
doi={10.1109/HICSS.2003.1174916}, 
ISSN={},}

ï»¿@incollection {Veanes:SpecExplorer,
   author = {Veanes, Margus and Campbell, Colin and Grieskamp, Wolfgang and Schulte, Wolfram and Tillmann, Nikolai and Nachmanson, Lev},
   affiliation = {Microsoft Research Redmond WA USA},
   title = {Model-Based Testing of Object-Oriented Reactive Systems with Spec Explorer},
   booktitle = {Formal Methods and Testing},
   series = {Lecture Notes in Computer Science},
   editor = {Hierons, Robert and Bowen, Jonathan and Harman, Mark},
   publisher = {Springer Berlin / Heidelberg},
   isbn = {978-3-540-78916-1},
   keyword = {Computer Science},
   pages = {39-76},
   volume = {4949},
   year = {2008}
}

@article{Jard:TGV,
   author = {Jard, Claude and J$\acute{e}$ron, Thierry},
   affiliation = {IRISA/ENS Cachan-Bretagne Campus de Ker Lann 35170 Bruz Cedex France},
   title = {TGV: theory, principles and algorithms},
   journal = {International Journal on Software Tools for Technology Transfer (STTT)},
   publisher = {Springer Berlin / Heidelberg},
   issn = {1433-2779},
   keyword = {Computer Science},
   pages = {297-315},
   volume = {7},
   issue = {4},
   url = {http://dx.doi.org/10.1007/s10009-004-0153-x},
   note = {10.1007/s10009-004-0153-x},
   year = {2005}
}

@article{Ghamarian:GROOVE,
          eprintid = {20208},
            number = {1},
             month = {February},
      official_url = {http://dx.doi.org/10.1007/s10009-011-0186-x},
              issn = {1433-2779},
            author = {A. H. {Ghamarian} and M. J. {de Mol} and A. {Rensink} and E. {Zambon} and M. V. {Zimakova}},
         num_pages = {26},
       ispublished = {Published},
           address = {Berlin},
         publisher = {Springer Verlag},
         id_number = {10.1007/s10009-011-0186-x},
           journal = {International journal on software tools for technology transfer},
      howpublished = {http://eprints.eemcs.utwente.nl/20208/},
            volume = {14},
   research_groups = {EWI-FMT: Formal Methods and Tools},
          refereed = {Yes},
  research_programs = {CTIT-DSN: Dependable Systems and Networks},
  research_projects = {{GROOVE}: Graphs for Object-Oriented Verification, GRAIL: Graphs for the Abstract Interpretation of Languages, GRASLAND: Graphs for Software Language Definitions, CHARTER: Critical and High Assurance Requirements Transformed through Engineering Rigor},
             title = {Modelling and analysis using {GROOVE}},
          abstract = {In this paper we present case studies that describe how the graph transformation tool {GROOVE} has been used to model problems from a wide variety of domains. These case studies highlight the wide applicability of {GROOVE} in particular, and of graph transformation in general. They also give concrete templates for using {GROOVE} in practice. Furthermore, we use the case studies to analyse the main strong and weak points of {GROOVE}.
},
     international = {Yes},
              year = {2012},
             pages = {15--40}
}

@inproceedings{Rensink:GROOVE,
          eprintid = {6926},
      official_url = {http://dx.doi.org/10.1007/978-3-540-25959-6\_40},
              issn = {0302-9743},
            author = {A. {Rensink}},
         num_pages = {7},
            series = {Lecture Notes in Computer Science},
        pres_types = {Other},
       ispublished = {Published},
            editor = {J. L. {Pfaltz} and M. {Nagl} and B. {B{\"o}hlen}},
           address = {Berlin},
         publisher = {Springer Verlag},
         id_number = {10.1007/978-3-540-25959-6\_40},
           isbn_13 = {978-3-540-22120-3},
      howpublished = {http://eprints.eemcs.utwente.nl/6926/},
            volume = {3062},
        event_type = {Conference},
   research_groups = {EWI-SE: Software Engineering},
         booktitle = {Applications of Graph Transformations with Industrial Relevance (AGTIVE)},
          refereed = {Yes},
  research_programs = {CTIT-ASI: A-services Internet},
  research_projects = {{GROOVE}: Graphs for Object-Oriented Verification},
             title = {The {GROOVE} Simulator: A Tool for State Space Generation},
          abstract = {The tool described here is the first part of a tool set called {GROOVE} (GRaph-based Object-Oriented VErification) for software model checking of object-oriented systems. The special feature of {GROOVE}, which sets it apart from other model checking approaches, is that it is based on graph transformations. It uses graphs to represent state snapshots; transitions arise from the application of graph production rules. This yields so-called Graph Transition Systems (GTSrsquos) as computational models.},
     international = {Yes},
              year = {2004},
             pages = {479--485}
}

@inproceedings{Rensink:graph_grammars,
          eprintid = {6922},
      official_url = {http://eprints.ecs.soton.ac.uk/7198/},
            author = {A. {Rensink}},
         num_pages = {11},
            series = {Technical Report},
        pres_types = {Talk},
       ispublished = {Published},
            editor = {S. {Gruner} and S. L. {Presti}},
           address = {Southampton},
         publisher = {University of Southampton},
      howpublished = {http://eprints.eemcs.utwente.nl/6922/},
            volume = {DSSE-TR-2003-02},
          location = {Southampton, UK},
        event_type = {Workshop},
   research_groups = {EWI-SE: Software Engineering},
         booktitle = {Workshop on Automated Verification of Critical Systems (AVoCS), Southampton, UK},
          refereed = {Yes},
  research_programs = {CTIT-ASI: A-services Internet},
             title = {Towards model checking graph grammars},
          abstract = {We sketch a setup in which transition systems are generated from graph grammars and
subsequently checked for properties expressed in a temporal logic on graphs. We envisage this
as part of an approach where graph grammars are used to express the behavioural semantics of
object-oriented programs, thus enabling automatic verification of those programs.
This paper describes work in progress.},
     international = {Yes},
              year = {2003},
             pages = {150--160}
}

@ARTICLE{Heckel2006187,
author={Heckel, R.},
title={Graph transformation in a nutshell},
journal={Electronic Notes in Theoretical Computer Science},
year={2006},
volume={148},
number={1 SPEC. ISS.},
pages={187-198},
url={http://www.scopus.com/inward/record.url?eid=2-s2.0-31044439391&partnerID=40&md5=fbc8fe07f17411d4295396acc4e44d0e},
document_type={Conference Paper},
source={Scopus},
}

@article{Andries1999,
title = "Graph transformation for specification and programming",
journal = "Science of Computer Programming",
volume = "34",
number = "1",
pages = "1 - 54",
year = "1999",
note = "",
issn = "0167-6423",
doi = "10.1016/S0167-6423(98)00023-9",
url = "http://www.sciencedirect.com/science/article/pii/S0167642398000239",
author = "Marc Andries and Gregor Engels and Annegret Habel and Berthold Hoffmann and Hans-J{\"o}rg Kreowski and Sabine Kuske and Detlef Plump and Andy Sch{\"u}rr and Gabriele Taentzer",
keywords = "Graph transformation",
keywords = "Rule-based specification",
keywords = "Transformation units",
keywords = "Structuring"
}

@TECHREPORT{Frantzen:Symbolic,
  author = {Lars Frantzen, Jan Tretmans, Tim A.C. Willemse},
  title = {Test Generation Based of Symbolic Specifcations},
  institution = {Nijmegen Institute for Computing and Information Sciences (NIII)},
  year = {2005}
}

@incollection {rusu:symbolic,
   author = {Rusu, Vlad and du Bousquet, Lydie and J$\acute{e}$ron, Thierry},
   affiliation = {IRISA/INRIA Rennes France},
   title = {An Approach to Symbolic Test Generation},
   booktitle = {Integrated Formal Methods},
   series = {Lecture Notes in Computer Science},
   editor = {Grieskamp, Wolfgang and Santen, Thomas and Stoddart, Bill},
   publisher = {Springer Berlin / Heidelberg},
   isbn = {978-3-540-41196-3},
   keyword = {Computer Science},
   pages = {338-357},
   volume = {1945},
   url = {http://dx.doi.org/10.1007/3-540-40911-4\_20},
   note = {10.1007/3-540-40911-4\_20},
   year = {2000}
}

@incollection {clarke:STG,
   author = {Clarke, Duncan and J$\acute{e}$ron, Thierry and Rusu, Vlad and Zinovieva, Elena},
   affiliation = {University of South Carolina Columbia South Carolina USA},
   title = {{STG}: A Symbolic Test Generation Tool},
   booktitle = {Tools and Algorithms for the Construction and Analysis of Systems},
   series = {Lecture Notes in Computer Science},
   editor = {Katoen, Joost-Pieter and Stevens, Perdita},
   publisher = {Springer Berlin / Heidelberg},
   isbn = {978-3-540-43419-1},
   keyword = {Computer Science},
   pages = {151-173},
   volume = {2280},
   url = {http://dx.doi.org/10.1007/3-540-46002-0\_34},
   note = {10.1007/3-540-46002-0\_34},
   year = {2002}
}

@mastersthesis {Sietsma:reachability,
  author = {Sietsma, Floor},
  title = {A Case Study in Formal Testing and an Algorithm for Automatic Test Case Generation with Symbolic Transition Systems},
  school = {Universiteit van Amsterdam},
  year = {2009}
}

@book {Halstead:software-science,
 author = {Halstead, M.H.},
 title = {Elements of Software Science},
 year = {1977},
 isbn = {0444002057},
 publisher = {Elsevier}
}
