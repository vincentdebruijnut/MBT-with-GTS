\section{Graph grammar exploration}

This section describes a system to transform a graph grammar to an STS without having to explore the entire GTS.

\subsection{Partial matching}
A rule can be checked to see if it \textit{could} match a given graph, if certain elements of the rule were different. In other words, a \textit{partial match} of a rule  can be found on a graph. For example, if the value nodes in a rule match were omitted from the match, the resulting partial match indicates the existence of a rule transition on a graph state with a different value node. Such a partial match therefore indicates the existence of an outgoing switch relation from the location represented by abstracted graph state in the transformed STS. The guard and update mapping can be constructed from the rule, by inspecting which value nodes \textit{would} match the LHS, NACs and RHS. The exploration can then skip graph states which have abstractions isomorphic to graph states already encountered.

This system can potentially lead to an infinite continuing exploration, when 

\subsection{Reachability}
MSc thesis Floor Sietsma "A Case Study in Formal Testing and an Algorithm for Automatic Test Case Generation with Symbolic Transition Systems"

Allows halting an exploration strategy when location no longer reachable. Only works for specific path though.
